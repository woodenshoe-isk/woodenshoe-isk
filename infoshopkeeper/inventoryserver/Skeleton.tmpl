##framework for other templates

#from SkeletonBase import SkeletonBase
#extends SkeletonBase
#implements respond
#encoding UTF-8
<head>
<title>$pagetitle</title>
<meta HTTP-EQUIV="Pragma" content="no-cache">
<meta HTTP-EQUIV="Expires" content="-1">
#block head
##<script src="/javascript/sorttable.js"></script>
<script src="/javascript/functions.js"></script>

<!--This adds jquery & jquery-ui -->

<script type='text/javascript' src='/javascript/jquery-1.12.3.min.js'></script>

<link type="text/css" href="/javascript/jquery-ui-1.12.0-rc.2.custom/jquery-ui.min.css" rel="Stylesheet" />
<script type='text/javascript' src='/javascript/jquery-ui-1.12.0-rc.2.custom/jquery-ui.min.js'></script>

<link type="text/css" href="/javascript/datatables.min.css" rel="Stylesheet" />	
<script type='text/javascript' src='/javascript/datatables.min.js'></script>
##<script type='text/javascript' src='/javascript/FixedHeader.js'></script>

<link href="/style/main.css" type="text/css" rel="stylesheet"/>

##head scripts should go here.
#block headscripts
#end block

#end block
</head>
<body>

##define generate menu function. Requires an iterable
##of triplets: [('MenuName', 'MenuURL', [ submenu of the same format if submenu ]), ]
##can recursively do submenus
#def generateMenu( $iterable )
#for $i in $iterable
    <li><a href='$i[1]'>$i[0]</a>
    #if $i[2]
    <ul>
    $generateMenu( $i[2] )
    </ul>
    #end if
    </li>
#end for
#end def

<div class="toolbar">
<ul class="nav">
##actually generate the menus using menudata.
##Class works as outlined above in generateMenu function def
$generateMenu( $menudata.getMenuData() )
</ul>
</div>
#set $lastsearch=0
#if $lastsearch
<a href="$lastsearch">Return to search results...</a>
#end if
<div class="main">
#block body
#end block
</div>
</body>
</html>
