#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from SkeletonBase import SkeletonBase

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.3'
__CHEETAH_versionTuple__ = (2, 4, 3, 'development', 0)
__CHEETAH_genTime__ = 1316642132.037538
__CHEETAH_genTimestamp__ = 'Wed Sep 21 17:55:32 2011'
__CHEETAH_src__ = 'Skeleton.tmpl'
__CHEETAH_srcLastModified__ = 'Fri Aug 26 21:26:08 2011'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class Skeleton(SkeletonBase):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(Skeleton, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def headscripts(self, **KWS):



        ## CHEETAH: generated from #block headscripts at line 32, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def head(self, **KWS):



        ## CHEETAH: generated from #block head at line 6, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write(u'''<script src="/javascript/sorttable.js"></script>
<script src="/javascript/functions.js"></script>


  <!-- calendar stylesheet -->
  <link rel="stylesheet" type="text/css" media="all" href="/style/calendar-win2k-cold-1.css" title="win2k-cold-1" />

  <!-- main calendar program -->
  <script type="text/javascript" src="/javascript/calendar.js"></script>

  <!-- language for the calendar -->
  <script type="text/javascript" src="/javascript/calendar-en.js"></script>

  <!-- the following script defines the Calendar.setup helper function, which makes
       adding a calendar a matter of 1 or 2 lines of code. -->
  <script type="text/javascript" src="/javascript/calendar-setup.js"></script>
<!--This adds jquery & jquery-ui -->

<link type="text/css" href="/javascript/css/smoothness/jquery-ui-1.8.13.custom.css" rel="Stylesheet" />\t
<script type=\'text/javascript\' src=\'/javascript/jquery-1.6.1.min.js\'></script>
<script type=\'text/javascript\' src=\'/javascript/jquery.dataTables.js\'></script>
<script type=\'text/javascript\' src=\'/javascript/FixedHeader.js\'></script>
<script type=\'text/javascript\' src=\'/javascript/js/jquery-ui-1.8.13.custom.min.js\'></script>

<link href="/style/main.css" type="text/css" rel="stylesheet"/>
''')
        self.headscripts(trans=trans)
        write(u'''
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def body(self, **KWS):



        ## CHEETAH: generated from #block body at line 64, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write(u'''<head>
<title>''')
        _v = VFFSL(SL,"pagetitle",True) # u'$pagetitle' on line 5, col 8
        if _v is not None: write(_filter(_v, rawExpr=u'$pagetitle')) # from line 5, col 8.
        write(u'''</title>
''')
        self.head(trans=trans)
        write(u'''</head>
<body>
<div class="toolbar">
<ul class="nav">
<li><a href="/search">Search the inventory</a></li>
<li><a href=\'/add_to_inventory\'>Add to Inventory</a></li>
<li><a href="/reports">Get reports</a>
    <ul>
''')
        for r in VFFSL(SL,"reports",True): # generated from line 44, col 5
            write(u'''    <li><a href="/report?reportname=''')
            _v = VFFSL(SL,"r",True)['action'] # u"${r['action']}" on line 45, col 37
            if _v is not None: write(_filter(_v, rawExpr=u"${r['action']}")) # from line 45, col 37.
            write(u'''">''')
            _v = VFFSL(SL,"r",True)['name'] # u"${r['name']}" on line 45, col 53
            if _v is not None: write(_filter(_v, rawExpr=u"${r['name']}")) # from line 45, col 53.
            write(u'''</a></li>
''')
        write(u'''    </ul>
</li>
<li><a href="/transactions">Review Transactions</a></li>
<li><a href=\'/notes/noteboard\'>Notes</a></li>
<li><a href="">Admin</a>
    <ul>
    <li><a href="/admin/kindlist">Edit Item Kinds</a></li>
    <li><a href="/admin/locationlist">Edit Item Locations</a></li>
    </ul>
</li>
</ul>
</div>
''')
        lastsearch = 0
        if VFFSL(SL,"lastsearch",True): # generated from line 60, col 1
            write(u'''<a href="''')
            _v = VFFSL(SL,"lastsearch",True) # u'$lastsearch' on line 61, col 10
            if _v is not None: write(_filter(_v, rawExpr=u'$lastsearch')) # from line 61, col 10.
            write(u'''">Return to search results...</a>
''')
        write(u'''<div class="main">
''')
        self.body(trans=trans)
        write(u'''</div>
</body>
</html>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_Skeleton= u'respond'

## END CLASS DEFINITION

if not hasattr(Skeleton, '_initCheetahAttributes'):
    templateAPIClass = getattr(Skeleton, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(Skeleton)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=Skeleton()).run()


