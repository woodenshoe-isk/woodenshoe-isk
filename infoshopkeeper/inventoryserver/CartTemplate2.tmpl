#from Skeleton import Skeleton
#extends Skeleton
#def headscripts
<script type='text/javascript'>                                         
    jQuery(document).ready( function(){
        var inventory_data={};
        
        //set up ajax error handling
//         jQuery.ajaxSetup({  'cache':false,
//                             'error':function(XMLHttpRequest,textStatus, errorThrown) {   
//                                 alert(textStatus + '\r' +
//                                       errorThrown + '\r' +
//                                       XMLHttpRequest.responseText);
//                             }
//         });
        
        //jQuery('#void-toggle').button();
        
        //make sure keypress goes to default dialog
        jQuery(document).keydown(function(event) {
            if (  jQuery('input:focus').length == 0 ) {
                 //event.preventDefault();
                 jQuery('#book').click();
                 jQuery('#my-form-book .isbnfield').focus();
                 jQuery('#my-form-book .isbnfield').trigger(jQuery.Event({type:'keydown', which:event.which, keyCode:event.keyCode, charCode:event.charCode}));
//               return false;
            }            
       });
    
        //add remove this row button from every row
        jQuery( document ).on('click', '.remove_item', function(){
            table_row_index=jQuery(this).parent().parent().index();
            jQuery.post('/register/remove_item_from_cart', {index:table_row_index}, function() {
                jQuery('table tr:eq('+table_row_index+')').remove();
            });
            return false;
        });
        
        //check out cart. mark sold. add to transactions, etc
        //remove items from table. Should change this to an ajax
        //reload of table
        jQuery("#check_out").click(function() {
            jQuery.post("/register/check_out", function() {
                jQuery("#cart_table tr").remove();
                return false;
            });
            return false;
        });
        
        //ditch the cart entirely
        //should change this to an ajax call
        jQuery("#void_sale").click(function() {
            jQuery.post("/register/void_cart", function() {
                jQuery("#cart_table tr").remove();
                return false;
            });
        });
        
        //jquery alert dialog for when isbn
        //not found in database
        jQuery( "#isbn_not_found_error" ).dialog({
            autoOpen: false,
            modal: true,
            buttons: {
                Ok: function() {
                    jQuery(this).dialog( 'close' );
                    return false;
                }
            }
        });
        
        //There is a button for every kind of product (books, etc)
        //This dialog adds a dialog to each of them
        //For inventoried items, check isbn. Otherwise, just
        //expect to get price of item. The close handler is because the dialog
        //is permanent rather than recreated each time.
        jQuery('.my-forms').each( function(){
            var dlg=jQuery(this).dialog( {
                autoOpen: false,
                modal: true,
                open: function(event, ui) {
                },
                //void isbn field
                //void list of attributes (title, price, etc)
                //of transaction.
                close: function() {
                    inventory_data={};
                    jQuery(this).find('.isbnfield').val('');
                    jQuery(this).find('.title_list').children().remove();
                    jQuery(this).find('input:checkbox').removeAttr('checked')
                    var so_div=jQuery(this).find('.special_order_div').css('display', 'none');
                    so_div.find('.special_order_data_div').css('display', 'none');
                    so_div.find('select').empty();
                    },
                buttons: {
                    //close button
                    Cancel: function(){
                        dlg.dialog('close');
                    },
                    //if you approve of the results from the isbn search,
                    //add them to the cart
                    'Add to Order': function(){
                       
                        //add item to cart table
                        //Should be ajax update
                        //Only if there's really an item.
                        if (Object.keys(inventory_data).length > 0 ) {
                
                            //if there is a special order chosen, add it to data to post to cart
                            inventory_data['special_order_selected'] = jQuery(this).find('.special_order_data_select').val()
                            //add item to the cart
                            jQuery.post('/register/add_item_to_cart', {item:JSON.stringify(inventory_data)}, function(){
                                jQuery('#cart_table > tbody').append('<tr><td>'+(((typeof  inventory_data.department) != "undefined")?inventory_data.department:'')
                                    +'</td><td>'+(((typeof inventory_data.booktitle) != 'undefined')?inventory_data.booktitle:'')
                                    + '</td><td>'+(((typeof  inventory_data.isbn) != "undefined")?inventory_data.isbn:'') 
                                    +'</td><td>'+(((typeof  inventory_data.ourprice) != "undefined")?inventory_data.ourprice:'')
                                    +'</td><td><input type="button" class="remove_item" value="Drop from Cart" /></td></tr>');

                                dlg.dialog('close');
                            });
                        }
                        return false;
                    }
                }
            });
            //connect the dialog and the button
            jQuery(this).parent().siblings('.main').find('#'+jQuery(this).attr('data-name')).click( function() {
                dlg.dialog('open');
                return false;
            });
        });
         
        //listener function to search database for isbn
        //and return item info and info applicable to transaction
        //i.e., if its taxable
        isbn_listener = function(evt) {
            //get category data (isTaxable, isInventoried) from button
            var event_target=jQuery(evt.target)
            var category_data=event_target.parent().parent().data()
            var isbnstring=event_target.val();

            var title_list=event_target.closest('div').find('.title_list');
            var outer_div=event_target.closest('div').find('.special_order_div');
            var selectbox = outer_div.find('select');
            
            //cache isbn_not_found dialog
            var isbn_error_alert=event_target.closest('body').find('#isbn_not_found_error');
            isbnstring=isbnstring.toLowerCase();
            isbnstring=isbnstring.replace(/\s+/g, ' ');

            //scrub isbn of spaces and hyphens if it is a potential 
            //real isbn
            if (isbnstring.match(/(\d([\s-]*)){12,13}|(\d([\s-]*)){15,18}|([\dxX]([\s-]*)){10}/)) {
                isbnstring=isbnstring.replace(/[\s-]/g, '');
            }
            
            //if there's an isbn and the category is an inventoried item (book, music, film)
            //search database for it.
            if (isbnstring.length>0 && category_data.is_inventoried_item == 'True') {

                if (isbnstring.match( /\d{13}|\d{12}|\d{9}[0-9xX]{1}/ )) {

                   jQuery.getJSON( '/register/get_item_by_isbn', {'isbn':isbnstring}, function(inventory_data1){
                        inventory_data1=inventory_data1[0];
                        //add category data to inventory data that was found... keeping one dict is easier.
                        jQuery.extend(inventory_data, {'department':category_data.label, 'isInventoried':category_data.is_inventoried_item, 'isTaxable':category_data.is_taxable});
                        
                        //if item is an inventoried item and there's a real result
                        //add all item info to dialog so user can approve add
                        //to inventory or not. If no results, open isbn error alert.
                        if (category_data.is_inventoried_item ) {
                            if ((inventory_data1 !== undefined) && (inventory_data1.booktitle !==undefined)) {
                                title_list.empty();
                                title_list.append('<li>'+category_data.label+'</li><li>'+inventory_data1.booktitle+'</li><li>'+ inventory_data1.ourprice+'</li>');
                                jQuery.extend(inventory_data, inventory_data1);

                                outer_div.css('display', 'none');
                                if (inventory_data1.special_orders != undefined) {
                                    if (inventory_data1.special_orders.length > 0) {
                                          outer_div.css('display', 'block');
                                          selectbox.empty();
                                          selectbox.append('<option selected value="0"></option>');
                                          jQuery.each(inventory_data1.special_orders, function() {
                                              selectbox.append('<option value="' + this[0] + '">' + this[1] + '</option>');
                                          });
                                    }
                                }
                            } else {
                                isbn_error_alert.dialog('open');
                            }
                        } 
                    });
                } else {
                    window.open('/register/select_item_search?authorOrTitle='+escape(isbnstring), '_self');
                }  
            
            //if is not inventoried, just add the price & category.
            } else if (isbnstring.length>0 && category_data.is_inventoried_item == 'False') {
                            title_list.empty();
                            title_list.append('<li>'+category_data.label+'</li>');
                            title_list.append('<li>'+isbnstring+'</li>');
                            jQuery.extend(inventory_data, {'department':category_data.label, 'isInventoried':category_data.is_inventoried_item, 'isTaxable':category_data.is_taxable});
                            jQuery.extend(inventory_data, {'ourprice': isbnstring });
            }

            if ( event_target.val() != isbnstring) {
                event_target.val(isbnstring);
            }
            
            evt.preventDefault();
            return false;
        }
        
        //add isbn_listener to these isbnfields
        //jQuery('.isbnfield').blur( isbn_listener );
        
        //prevent return from triggering submit.
        //we want to actually approve the data before we submit.
        jQuery('.isbnfield').keypress( function(evt) {
            if (evt.keyCode == 13 || evt.charCode == 13) {
                evt.preventDefault();

                console.log('in key press traps return');
                console.log(jQuery(this).closest('.ui-dialog').find('.ui-button'));
                jQuery(this).closest('.ui-dialog').find('.ui-button')[2].focus();

                isbn_listener(evt);
            }
        });
        
        jQuery('input:checkbox').change( function() {
            if (jQuery(this).is(':checked')) {
                jQuery(this).parent().find('div').css('display', 'block');
            } else {
                jQuery(this).parent().find('div').css('display', 'none');
            }
        });
        
    });
</script>
#end def
#def pagetitle: Build Cart...

#def body
    <h1>Remove Items from Inventory</h1>
    #from etc import departments
    <div id = 'cart_panel'>
        ##<label for='void-toggle'>Void</label>
        ##<input type='checkbox' id='void-toggle' />
        #for $dep in $departments
            <button id='$dep['name']' class='department_button' value=$dep>$dep['label']</button>
            <div id='my-form-$dep['name']' class='my-forms' title='Enter ISBN, Author/Title or Price' data-name=$dep['name'] data-label=$dep['label'] data-is_inventoried_item=$dep['isInventoriedItem'] data-is_taxable=$dep['isTaxable']>
                <form action='' method='get'>
                    <input class='isbnfield' type='text' name='isbn' />#slurp
                    <div class="special_order_div" style='display: none;'>
                        <input type='checkbox' class='is_special_order_checkbox' value='is_special_order'><span>This is a special order</span>
                        <div class='special_order_data_div' style='display:none'> for <select class='special_order_data_select'></select></div>
                    </div>

                    ##replaced by smarter textbox which checks if isbn & then either
                    ##does ajax or sends to select_item_search page.
                    ##if $dep['isInventoriedItem']
                    ##    <input type="button" value="Search" onclick="window.open('/register/select_item_search', '_self');" /><br>
                    ##end if
               </form>
               <div id='title_list_panel' class='title_list_panel' name='title_list_panel'>
                    <ul id='title_list' class='title_list' name='title_list'></ul>
               </div>  
            </div>
        #end for
        #set $column_keys = ['department', 'booktitle', 'isbn', 'ourprice']
        <div id="cart_table_panel">
              <table id='cart_table'>
                <thead></thead>
                <tbody>
                    #if $session_data
                        #if $session_data.items
                            #for item in $session_data.items
                                <tr>
                                    #for $key in $column_keys
                                        <td>
                                            #try
                                                $item[$key]
                                            #except
                                                #pass
                                            #end try
                                        </td>
                                    #end for
                                    <td><input type="button" class="remove_item" value="Drop from Cart" /></td>
                                </tr>
                            #end for
                        #end if
                    #end if
                </tbody>
            </table>
        </div>
        <button id="void_sale" name="void_sale">Void Entire Sale</button><button id="check_out" name="check_out">Remove Items from Inventory</button>
    </div>
    
    <div id='isbn_not_found_error' class='error_dialog' title='Error: ISBN not found'>
        Check the ISBN again or use the search button to search the inventory by attributes.
    </div>

#end def
